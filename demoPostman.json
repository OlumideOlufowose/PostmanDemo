{
	"info": {
		"_postman_id": "39227773-ec9b-479c-bdd9-ffc6e34b0c54",
		"name": "Day2 (https://reqres.in/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31762524",
		"_collection_link": "https://bold-rocket-392086.postman.co/workspace/Ruby%2522s-Workspace~30f07bea-0b33-4447-bfb2-ee77a74dd25a/collection/31762524-39227773-ec9b-479c-bdd9-ffc6e34b0c54?action=share&source=collection_link&creator=31762524"
	},
	"item": [
		{
			"name": "Test1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed the failing test for response time",
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response body contains data\", function () {",
							"  pm.expect(pm.response.text()).to.include(\"data\");",
							"});",
							"pm.test(\"validate Content - Type\", function() {",
							"    pm.response.to.be.header(\"server\",\"cloudflare\");",
							"});",
							"",
							"pm.execution.setNextRequest(\"Test3\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{test}}/api/users?page=2",
					"host": [
						"{{test}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify first name\", function () {",
							"    pm.expect(pm.response.json().data.first_name).to.eql(\"Janet\");",
							"});",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"verify email\", function () {",
							"    pm.expect(pm.response.json().data.email).to.eql(\"janet.weaver@reqres.in\");",
							"});",
							"",
							"pm.test(\"verify id\", function () {",
							"    pm.expect(pm.response.json().data.id).to.eql(2);",
							"});",
							"",
							"pm.test(\"verify url\", function () {",
							"    pm.expect(pm.response.json().support.url).to.eql(\"https://reqres.in/#support-heading\");",
							"});",
							"",
							"pm.execution.setNextRequest(\"Test5\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{test}}/api/users/2",
					"host": [
						"{{test}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify name\", function () {",
							"    pm.expect(pm.response.json().name).to.eql(\"morpheus\");",
							"});",
							"",
							"pm.test(\"Verify id\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('id');",
							"});",
							"",
							"pm.test(\"Response status code is 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"pm.execution.setNextRequest(\"Test2\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{test}}/api/users{",
					"host": [
						"{{test}}"
					],
					"path": [
						"api",
						"users{"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate token presence in the response body\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('token');",
							"});",
							"",
							"pm.execution.setNextRequest(\"Test7\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{test}}/api/login",
					"host": [
						"{{test}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.execution.setNextRequest(\"Test6\");",
							"",
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"// Test to validate the error in the response body",
							"pm.test(\"Response body contains the error message 'user not found'\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('error', 'user not found');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.lott@reqres.in\",\n    \"password\": \"stateslicka\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{test}}/api/login",
					"host": [
						"{{test}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"postman.setNextRequest(\"Test4\");",
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"// Test to check for the presence of the 'Missing password' message in the response body",
							"pm.test(\"Response body contains the 'Missing password' message\", function () {",
							"    pm.expect(pm.response.text()).to.include('Missing password');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.lott@reqres.in\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{test}}/api/login",
					"host": [
						"{{test}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response body has the password field\", function () {",
							"    pm.expect(pm.response.json().error).to.include('password');",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.lott@reqres.in\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{test}}/api/login",
					"host": [
						"{{test}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"//postman.setGlobalVariable(\"url\", \"https://reqres.in\")"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}